"use strict";(self.webpackChunkrne_website=self.webpackChunkrne_website||[]).push([[9267],{99965:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>d,default:()=>h,frontMatter:()=>p,metadata:()=>s,toc:()=>c});var a=n(87462),l=n(63366),i=(n(51702),n(1037)),r=n(29807),o=["components"],p={id:"switch",title:"Switch"},d=void 0,s={unversionedId:"components/switch",id:"components/switch",title:"Switch",description:"Usage",source:"@site/docs/components/Switch.mdx",sourceDirName:"components",slug:"/components/switch",permalink:"/docs/components/switch",draft:!1,editUrl:"https://github.com/docs/components/Switch.mdx",tags:[],version:"current",frontMatter:{id:"switch",title:"Switch"},sidebar:"docs",previous:{title:"CheckBox",permalink:"/docs/components/checkbox"},next:{title:"InputTextArea",permalink:"/docs/components/inputtextarea"}},m={},c=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2}],k={toc:c},u="wrapper";function h(t){var e=t.components,n=(0,l.Z)(t,o);return(0,i.kt)(u,(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("div",{class:"row inline-flex-center"},(0,i.kt)("div",{class:"col col--12"},(0,i.kt)(r.Z,{mdxType:"CodeBlock"},"import { Switch } from '@momo-kits/foundation';"))),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("div",{class:"table-responsive"},(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"disabled")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"disabled"),": Optional. If ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", the user won't be able to interact with the Switch component.Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"false")," if not provided.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onChange")),(0,i.kt)("td",{parentName:"tr",align:null},"(value: boolean) => void"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onChange"),": A callback function that is called when the value of the Switch component changes.It receives the new value of the Switch as a parameter.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"style")),(0,i.kt)("td",{parentName:"tr",align:null},"ViewStyle"),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"style"),": Optional. Used to apply custom styling to the Switch component.Accepts an object of style properties.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"value"),": Represents whether the Switch component is currently in the 'on' (",(0,i.kt)("inlineCode",{parentName:"td"},"true"),") or 'off' (",(0,i.kt)("inlineCode",{parentName:"td"},"false"),") state."))))))}h.isMDXComponent=!0}}]);